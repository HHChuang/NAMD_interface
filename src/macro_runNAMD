#!/bin/bash
# 
# Purpose: 
#   Run many trajectories. 
# 
# Input: 
#   $1 = list of subdirectory name 
#   $2 = setting files, *.dat
# 
# Pre-requist: 
#   runNAMD_head
#   GNU parallel
# 
#     2022/08/22, Grace, H.G.Chuang@leeds.ac.uk
# 

function main(){

    # Set global variables
    parameters $@

    # Run jobs on multiple nodes (use `screen` to continue the propagation)
    manyNodes $@

    # Detect current submitting status, and then resubmit it if it ends. TODO:

}

function parameters(){
    
    dirRoot='traj_'
    fileRoot='g_'
    home=`pwd`
    numfile_threshold='10'
    settingFile=$home'/'$2 
    nbranch=$(grep -A 1 'Cloning or not' $2 | tail -n 1 )

    runNAMD_prog='/home/home02/chmhch/NAMD_src/runNAMD_slave_test'
}

function manyNodes(){

    for Fileidx in `cat $1`
    do
        workDir="$home/$dirRoot$Fileidx"

        firstPt=$(test1stPT $workDir $Fileidx)
        sgefile=$(echo $firstPt| cut -d '.' -f 1)
        cd $workDir 
        cp $runNAMD_prog $sgefile.sge 
        qsub $sgefile.sge $firstPt $settingFile  

    done 

    cd  $home 

}

function test1stPT(){
    # 
    #   If the selected directory only has one file (molecular position and momentum file with the file extension as '.iniPM', then it goes to the first mode which calculate the initial electronic wavefunction, or it goes to the second mode which reads the existed electronic wavefunction.)
    # 
    # Input: 
    #   $1 = path of the working directory
    #   $2 = fileidx
    # 
    # Output: 
    #   $firstPt
    # 
    
    workdir=$1 
    numfile=$(ls $workdir | grep -c .out )

    if [ $nbranch == 0 ]
    then
        fileidx=$2
    elif [ $nbranch == 1 ]
    then 
        fileidx=$(echo $2 | cut -d '/' -f 1)
    fi 
        
    # If the number of file is less than $numfile_threshold, start trajectory form the first point. (i.e. calculate directory *_WF for storing wavefunction)
    if [ $numfile -lt $numfile_threshold ]
    then 
        # First mode, calculate electronic wavefunction.
        firstPt="$fileRoot$fileidx.iniPM"
    else 
        # Second mode, read existed electronic wavefunction. Use the second last point to start the new calculation.
        firstPt=$( ls  $workdir | grep _nonad.out | sort -n -t _ -k 3 | tail -n 2 | head -n 1  )
    fi 

    # return value 
    echo $firstPt
}

main $@ 