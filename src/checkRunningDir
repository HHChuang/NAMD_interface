#!/bin/bash
# 
# Input: 
#   $1 = setting.dat 
# 
# Output:
#   1. totTraj.dat 
#   2. fullTraj.dat 
#   3. fail1pt.dat 
#   4. restTraj.dat
#   5. runningTraj.dat 
#   6. runningTraj_clon.dat 
#   7. termTraj.dat
# 
# 2022/08/23, Grace, H.G.Chuang@leeds.ac.uk
# 

function main(){
    # 1. Set global variables
    setParameters $@

    # 2. Standard output of header 
    printHeader

    # 3. Count the number of files in each trail directory, and also transform tham into fs. 
    # 
    # Output:
    #   1. totTraj.dat 
    #   2. fullTraj.dat
    #   3. fail1pt.dat 
    #   4. restTraj.dat 
    # 
    calcBody 

    # 4. Calculte the terminate directory name in order to resubmit them. 
    # 
    # Output: 
    #   1. runningTraj.dat 
    #   2. runningTraj_clon.dat 
    #   3. termTraj.dat 
    # 
    calcTerm 

    # 5. Standard output of statistic result. 
    printStatic
}


function setParameters(){

    home=`pwd`

    tstep=$( grep -A 1 'Time step' $1 | tail -n 1 )
    if [ $tstep == '10.' ]
    then 
        totpt=900
    elif [ $tstep == '2.5' ]
    then 
        totpt=3003
    fi 
    fileRoot='traj_'


    nbranch=$( grep -A 1 'Cloning or not' $1 | tail -n 1 )
}


function calcBody(){

    totTraj=0
    fullTraj=0
    fail1pt=0

    ls | grep $fileRoot | sort -n -t _ -k 2 > fileList.tmp
    if [ $nbranch == 1 ]
    then 
        # cloning 
        rm -f file.tmp 
        for n in `cat fileList.tmp `
        do 
            subDir=( $(ls $n) )  
        
            for (( i=0; i<${#subDir[@]}; i++ ))
            do 
                echo $n\/${subDir[@]} >> file.tmp 
            done 

        done 
        mv file.tmp fileList.tmp 
    fi 

    rm -f totTraj.dat fullTraj.dat fail1pt.dat restTraj.dat body.tmp 
    for filename in `cat fileList.tmp`
    do
        totTraj=$(( $totTraj + 1 )) 
        echo $filename >> totTraj.dat

        nfile=$(ls $filename | wc -l)
        if [ $nfile -gt 1 ] # job is running or finished or failed 
        then
            lastpt=$(ls $filename | grep -c nonad.out ) 
            if [ $lastpt != 0 ]
            then 
                lastpt=$(( $lastpt - 1 ))
            fi
            
            # check if $lastpt is empty 
            if [ -z $lastpt  ] 
            then 
                lastpt=1
            fi 
            finalTime=$(awk "BEGIN {print $lastpt * $tstep * 2.4189 * 10^-2 }")
            
            if [ $lastpt -eq $totpt ] 
            then 
                fullTraj=$(( $fullTraj + 1 )) 
                echo $filename | sed "s/$fileRoot//g" >> fullTraj.dat 
            elif [ $lastpt -eq 1 ] 
            then 
                fail1pt=$(( $fail1pt + 1 )) 
                echo $filename | sed "s/$fileRoot//g" >> fail1pt.dat 
            else 
                echo $filename | sed "s/$fileRoot//g" >> restTraj.dat
            fi 

            
            if [ $nbranch == 1 ]
            then 
                subname=$( echo $filename | cut -d '/' -f 2 ) 
                if [ $subname ==  1 ]
                then 
                    filename=$( echo $filename | cut -d '/' -f 1 )
                else 
                    filename=$( echo $filename | cut -d '/' -f 2 )
                fi 
            fi 
            printf "%-10s %-6s %-10s %-10s\n" $filename $nfile $lastpt $finalTime

        fi 
    done 
    sed -i "s/$fileRoot//g" totTraj.dat 
    rm -f fileList.tmp 
}


function calcTerm(){

    num_homeDir=$(echo $home | tr -d -c '/' | awk '{print length}' )
    num_homeDir_plus1=$(( $num_homeDir + 1 )) 
    num_homeDir_plus2=$(( $num_homeDir + 2 )) 

    qstat -u $USER | awk '{print $1}' | grep '[0-9]' > jobid.tmp 
    rm -f runningTraj.dat runningTraj_clon.dat 
    for id_i in `cat jobid.tmp`
    do 
        check_clon=$(qstat -j $id_i | grep 'sge_o_workdir' | awk '{print $2}' | tr -d -c '/' | awk '{print length}') 
        if [ $check_clon == $num_homeDir_plus1 ] 
        then 
            qstat -j $id_i | grep 'sge_o_workdir' | awk '{print $2}' | cut -d '/' -f 7 >> runningTraj.dat
        elif [ $check_clon == $num_homeDir_plus2 ]
        then
            qstat -j $id_i | grep 'sge_o_workdir' | awk '{print $2}' | cut -d '/' -f 7,8 >> runningTraj_clon.dat 
        fi 
    done 
    
    rm -f termTraj.dat 
    if [ $nbranch == 0 ]
    then 
        rm -f runningTraj_clon.dat 
        sed -i "s/$fileRoot//g" runningTraj.dat 
        diff totTraj.dat runningTraj.dat | grep '<' | sed 's/<//g' > termTraj.dat 
    elif [ $nbranch == 1 ]
    then 
        rm -f runningTraj.dat 
        sed -i "s/$fileRoot//g" runningTraj_clon.dat
        diff totTraj.dat runningTraj_clon.dat | grep '<' | sed 's/<//g' > termTraj.dat 
    fi 
    termTraj=$(wc -l termTraj.dat | awk '{print $1}')
    rm -f jobid.tmp 
}


function printHeader(){
    head1='file' 
    head2='nfiles'
    head3='lastpoint' 
    head4='time(fs)'
    echo '-------------------------------------'
    echo "time step: $tstep a.u. "
    printf '%-10s %-6s %-10s %-10s\n' $head1 $head2 $head3 $head4 
    echo '-------------------------------------'

}


function printStatic(){
    echo '-----------------------------------------------'
    echo ''
    echo 'Statistic result'
    echo ''
    echo 'Filenames are listed in the following files:'
    echo 'totTraj.dat, fullTraj.dat,fail1pt.dat,'
    echo 'restTraj.dat, termTraj.dat,'
    if [ $nbranch == 0 ]
    then 
        echo 'runningTraj.dat.'
    elif [ $nbranch == 1 ] 
    then 
        echo 'runningTraj_clon.dat.'
    fi 
    echo ''
    echo 'Number of trajectories:'
    echo "total: $totTraj " 
    echo ''
    echo "terminate: $termTraj"
    echo "full: $fullTraj "
    echo "fail@1pt: $fail1pt" 
    echo "rest: $(( $totTraj - $fullTraj - $fail1pt)) "
    echo '-----------------------------------------------'
}   


main $@