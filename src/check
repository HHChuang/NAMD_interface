#!/bin/bash
# 2022/07/12, Grace, H.G.Chuang@leeds.ac.uk

function main(){
    # 1. Generate an ordered list for qchem output files, and also analyse the status of these files.  
    # orderedSubDir=(traj_10 traj_10_1 traj_10_2) 
    # rootname=('methane' 'methane_445' 'methane_445_111')
    orderedSubDir=(traj_10) 
    rootName=('methane')
    numForce=5
    natom=5
    home=`pwd`

    for ((subdir=0;subdir<${#orderedSubDir[@]};subdir++))
    do 
        cd $home/${orderedSubDir[$subdir]}
        echo ${orderedSubDir[$subdir]}
        genList ${rootName[$subdir]} $numForce # output: ordered_list.dat 
        checkOut ordered_list.dat 
        echo '--------------------------------------'
    done 

    # 2. Grep energy into file, E.dat
    cd $home 
    tarDir='traj10'
    
    # input: 
    #   1. $tarDir 
    #   2. ${orderedSubDir[@]}
    #   3. ordered_list.dat in each subdirectories  
    #   output directory: $tarDir (reordered qchem output files)
    combineDir 
    

    grepEandXYZ $tarDir # output: E.dat, traj.xyz  
}

function genList(){
    # $1 = root name of trajectory 
    # $2 = highest excited state 

    totfile=$(ls | grep -c out)
    npts=$(($totfile / ( $2 + 1 ) ))
    restpts=$(($totfile % ( $2 + 1 ) ))
    rm -f ordered_list.dat 
    for ((i=1;i<=$npts;i++))
    do 
        rtname=$1\_$i
        echo $rtname\_nonad.out >> ordered_list.dat 
        for (( s=1; s<=$2; s++ ))
        do 
            echo $rtname\_force\_$s.out >> ordered_list.dat 
        done 
    done 
    if [ $restpts -ge 1 ]
    then 
        echo $1\_$(($i))\_nonad.out >> ordered_list.dat 
        if [ $restpts -gt 1 ]
        then 
            for (( s=1; s<=$(( $restpts-1 )); s++ ))
            do
                echo $1\_$(($i))\_force\_$s.out >> ordered_list.dat 
            done 
        fi 
    fi 
}

function checkOut(){
    # $1 = qchem output file in an order list 
    tot=$(wc -l $1 | awk '{print $1}')
    suc=0
    for name in `cat $1`
    do 
        if [ -f $name ]
        then 
            s=$(grep -c Thank $name)
            suc=$(( $suc + $s ))
        fi 
    done 
    # suc=$(grep -c Thank *.out | cut -d ':' -f 2 | grep -c 1)
    fail=$(($tot-$suc))
    grep -c Thank *.out | grep -v :1 | cut -d ':' -f 1 > fail.dat

    echo "total: $tot, success: $suc, fail: $fail"
    echo ''
    echo 'Failed files: fail.dat '
    cat fail.dat 
    sed -i "$(($tot-$fail)),$ d" $1
}

function combineDir(){
    # input: 
    #   1. target directory 
    #   2. input sub-directory
    #   3. nother inputs: ordered_list.dat in each subdirectories
    # 
    # output: 
    #   reordered qchem output files 

    # combine directory and move point into target directory 
    rm -rf $tarDir 
    mkdir $tarDir
    totnpt=0
    for ((dir=0; dir<${#orderedSubDir[@]}; dir++))
    do 
        # echo $home/${orderedSubDir[$dir]}/${rootname[$dir]}_*_nonad.out $home/$tarDir 
        cp $home/${orderedSubDir[$dir]}/${rootName[$dir]}_*_nonad.out $home/$tarDir 
        grep nonad $home/${orderedSubDir[$dir]}/ordered_list.dat > $home/$tarDir/ordered_list.dat  

        # rename and reorder each point
        cd $home/$tarDir 
        for name in `cat ordered_list.dat`
        do 
            mv $name $totnpt.out 
            totnpt=$(($totnpt + 1 ))
        done  
    done 
    cd $home 
}

function grepEandXYZ(){
    # $1 = target directory
    cd $home/$1 
    totnpt=$(ls | grep -v ${rootName[0]} | grep -c out)

    rm -f E.dat traj.xyz 
    for ((name=0; name<$totnpt; name++))
    do 
        # grep potential energy in each state
        Energy=$(grep 'Total energy for state' $name.out | awk '{print $6}')
        echo $name ${Energy[@]} >> E.dat 

        # generate xyz file for jmol molecular visulalization
        echo $natom >> traj.xyz 
        echo $name >> traj.xyz
        grep -A $(($natom + 2)) 'Standard Nuclear Orientation (Angstroms)' $name.out | tail -n $natom | awk '{print $2, $3, $4, $5}' >> traj.xyz 
    done 
    cd $home 
}

main $1